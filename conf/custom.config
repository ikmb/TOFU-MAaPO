//Change this file to your own custom values before running this pipeline!

// Job parameters to set for this environment

params {


  // Software DB locations, UNCOMMENT AND CHANGE THEM


  //metaphlan_db = "${baseDir}/databases/Metaphlan/4.0"
  
  //kraken2_db = "${baseDir}/databases/Kraken2/k2_viral_20210517"

  //humann_db = "${baseDir}/databases/Humann3/3.6" 

  //gtdbtk_reference = "${baseDir}/databases/GTDB-TK/release207_v2"

	'genomes' {
		'human' {
      //bowtie_index = "${baseDir}/databases/human/GRCh38_noalt_decoy_as/GRCh38_noalt_decoy_as"
		}
	}

  // MAXIMUM PER PROCESS CONFIGS, CHANGE THEM TO YOUR HARDWARE SPECS
  max_memory = 300.GB
  max_cpus = 32
  max_time = 48.h
  maxMultiqcEmailFileSize = 25.MB  
  
  //Scratch
  scratch = false
}

singularity {
	enabled = true

  // Singularity configs, CHANGE THEM TO YOUR USED FILESYSTEM AND SINGULARTIY CACHE
	runOptions = "-B /dpool"
	cacheDir = "/dpool/someuser/metagenomics/singularity_cache"
}


//Defaults for each process:
process {
  //Default executor for each process:
  executor='local'
}


executor {
  //Default for total execution, remove this part when not executor='local':
  cpus = 32
  memory = 300.GB
}

// EXAMPLE FOR SLURM QUEUE MANAGER:
//executor {
  //name="slurm"
  //queueSize=35
  //queue = 'all'
//}



// FOLLOWING THINGS SHOULD NOT BE NEEDED TO BE CHANGED

// Process setting

process {
	shell = ['/bin/bash', '-euo', 'pipefail']

	errorStrategy = { task.attempt <= 3 ? 'retry' : 'finish' }
	maxRetries = 3
	maxErrors = '-1'

	// Specific parameters for each process

	withLabel: 'local_run' {
		executor = 'local'
		cpus = { check_max( 1 * task.attempt, 'cpus' ) }
		memory = { check_max( 4.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}
	
	withLabel: 'local_download' {
		executor = 'local'
		errorStrategy = {
			sleep( Math.pow( 2, task.attempt ) * 200 as long )
			return 'retry'
		}
		maxRetries = 5
		maxForks = 3
		cpus = { check_max( 1 * task.attempt, 'cpus' ) }
		memory = { check_max( 4.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'default' {
		cpus = { check_max( 4 * task.attempt, 'cpus' ) }
		memory = { check_max( 16.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'default_highmemory' {
		cpus = { check_max( 4 * task.attempt, 'cpus' ) }
		memory = { check_max( 64.GB * (2**(task.attempt-1)), 'memory' ) }
		time = { check_max( 24.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'fastqc' {
		cpus = { check_max( 2 * task.attempt, 'cpus' ) }
		memory = { check_max( 8.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/fastqc:0.11.9--hdfd78af_1"
	}

	withLabel: 'metaphlan' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 16.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'bbmap' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 12.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/bbmap:39.00--h5c4e2a8_0"
	}

	withLabel: 'fastp' {
		cpus = { check_max( 4 * task.attempt, 'cpus' ) }
		memory = { check_max( 8.GB * task.attempt, 'memory' ) }
		time = { check_max( 12.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/fastp:0.23.4--hadf994f_2"
	}

	withLabel: 'bowtie2qc' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 12.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'vamb' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 72.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/vamb:3.0.2--py36h91eb985_2"
	}

	withLabel: 'bowtie2' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		time = { check_max( 48.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
		//container = "docker://quay.io/biocontainers/bowtie2:2.4.2--py38h1c8e9b9_1"
	}

	withLabel: 'megahit' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 128.GB * task.attempt, 'memory' ) }
		time = { check_max( 72.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/megahit:1.2.9--h2e03b76_1"
	}

	withLabel: 'metabat2' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		time = { check_max( 72.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'semibin' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		time = { check_max( 72.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/semibin:1.5.1--pyhdfd78af_0"
	}

	withLabel: 'checkm' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 80.GB * task.attempt, 'memory' ) }
		time = { check_max( 72.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/checkm-genome:1.1.3--py_1"
		maxForks = 5
	}

	withLabel: 'gtdbtk' {
		cpus = { check_max( 12 * task.attempt, 'cpus' ) }
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		time = { check_max( 168.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/gtdbtk:2.3.2--pyhdfd78af_0"
	}

	withLabel: 'humann' {
		cpus = { check_max( 12 * task.attempt, 'cpus') }
		memory = { check_max( 64.GB * (2**(task.attempt-1)), 'memory') }
		time = { check_max( 24.h * task.attempt, 'time') }
		container = "docker://ikmb/metagenome:1.4.0"
	}

	withLabel: 'multiqc' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 8.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/multiqc:1.15--pyhdfd78af_0"
	}

	withLabel: 'kraken' {
		container = "docker://quay.io/biocontainers/kraken2:2.1.2--pl5321h9f5acd7_2"
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 64.GB * task.attempt, 'memory' ) }
		time = { check_max( 16.h * task.attempt, 'time' ) }
	}

	withLabel: 'bracken' {
		cpus = { check_max( 4 * task.attempt, 'cpus' ) }
		memory = { check_max( 16.GB * task.attempt, 'memory' ) }
		time = { check_max( 16.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/bracken:2.8--py27hc30c61c_0"
	}

	withLabel: 'magscot' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 16.h * task.attempt, 'time' ) }
		container = "docker://ikmb/magscot:latest"
	}

	withLabel: 'maxbin2' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 24.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/maxbin2:2.2.7--h87f3376_4"
	}

	withLabel: 'concoct' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 32.GB * task.attempt, 'memory' ) }
		time = { check_max( 24.h * task.attempt, 'time' ) }
		container = "docker://ikmb/metagenome:1.4.0"
		//container = "docker://quay.io/biocontainers/concoct:1.1.0--py310h07c81ac_3"
	}

	withLabel: 'salmon' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 80.GB * task.attempt, 'memory' ) }
		time = { check_max( 1.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/salmon:1.10.1--hecfa306_2"
	}

	withLabel: 'sylph' {
		cpus = { check_max( 8 * task.attempt, 'cpus' ) }
		memory = { check_max( 16.GB * task.attempt, 'memory' ) }
		time = { check_max( 1.h * task.attempt, 'time' ) }
		container = "docker://quay.io/biocontainers/sylph:0.4.1--h4ac6f70_0"
	}

	// Global cluster parameters

		cpus = { check_max( 4 * task.attempt, 'cpus' ) }
		memory = { check_max( 16.GB * task.attempt, 'memory' ) }
		time = { check_max( 8.h * task.attempt, 'time' ) }
}